generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  name      String?
  email     String    @unique
  password  Password?
  products  Product[]
  lists     List[]

  @@index([email])
}

model Password {
  hash   String @unique
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  name      String
  number    Int
  userId    String   @map("ownerId")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model ListProduct {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  name      String
  number    Int
  price     Float
  listId    String?
  list      List?    @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@index([listId])
}

model List {
  id        String        @id @default(cuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now()) @updatedAt
  total     Float
  products  ListProduct[]
  userId    String        @map("ownerId")
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
